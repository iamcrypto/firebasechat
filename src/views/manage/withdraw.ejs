<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Withdraw money</title>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <link rel="stylesheet" href="/plugins/fontawesome-free/css/all.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link href="//cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet">
  <link rel="stylesheet" href="/dist/css/adminlte.min.css">
  <link rel="stylesheet" href="/css/admin.css">
</head>

<body class="hold-transition sidebar-mini">

  <style>
    .three
    {
      display: flex;
      padding-left: 5%;
    }

    .toggle {
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      box-sizing: border-box;
      display: block;
      height: auto;
      width: 3.5rem;
      margin: auto;
      cursor: pointer;
    }
    .toggle-input {
      display: none;
      margin: 0;
    }
    .toggle-off,
    .toggle-on {
      height: 1.8125rem;
      width: 1.8125rem;
      color: rgba(46, 45, 44, 0.1);
      vertical-align: top;
      text-align: center;
      line-height: 1.8125rem !important;
    }
    .toggle-input:checked + .toggle-controller.default-success {
      border: 0.125rem solid rgba(108, 211, 61, 0.75);
      background: rgba(108, 211, 61, 0.375);
    }
    .toggle-input:checked + .toggle-controller.default-success:after {
      left: 1.5625rem;
    }
    .toggle-controller.default-success {
      position: relative;
      display: inline-block;
      height: 1.5625rem;
      width: 3.125rem;
      border: 0.125rem solid rgba(46, 45, 44, 0.05);
      -webkit-border-radius: 1.5625rem;
      -moz-border-radius: 1.5625rem;
      border-radius: 1.5625rem;
      -webkit-box-shadow: inset 0 0 0.1875rem rgba(46, 45, 44, 0.25);
      -moz-box-shadow: inset 0 0 0.1875rem rgba(46, 45, 44, 0.25);
      box-shadow: inset 0 0 0.1875rem rgba(46, 45, 44, 0.25);
      background: rgba(46, 45, 44, 0.025);
      -webkit-transition: all 0.25s ease;
      -moz-transition: all 0.25s ease;
      -o-transition: all 0.25s ease;
      transition: all 0.25s ease;
    }
    .toggle-controller.default-success:after {
      position: absolute;
      top: 0;
      left: 0;
      content: '';
      display: block;
      height: 1.5625rem;
      width: 1.5625rem;
      -webkit-border-radius: 1.5625rem;
      -moz-border-radius: 1.5625rem;
      border-radius: 1.5625rem;
      -webkit-box-shadow: 0 0.0625rem 0.125rem rgba(46, 45, 44, 0.2);
      -moz-box-shadow: 0 0.0625rem 0.125rem rgba(46, 45, 44, 0.2);
      box-shadow: 0 0.0625rem 0.125rem rgba(46, 45, 44, 0.2);
      background: white;
      -webkit-transition: all 0.25s ease;
      -moz-transition: all 0.25s ease;
      -o-transition: all 0.25s ease;
      transition: all 0.25s ease;
    }
    .toggle-off.active {color:red;}
    .toggle-on.active {color:green;}
    
   
    .card-tools h3
    {
      padding-top: 1%;
    }
    .slider:before {
      position: absolute;
      content: "";
      height: 20px;
      width: 20px;
      left: 10px;
      bottom: 3px;
      background-color: white;
      -webkit-transition: .4s;
      transition: .4s;
    }
    
    input:checked + .slider {
      background-color: #2196F3;
    }
    
    input:focus + .slider {
      box-shadow: 0 0 1px #2196F3;
    }
    
    input:checked + .slider:before {
      -webkit-transform: translateX(26px);
      -ms-transform: translateX(26px);
      transform: translateX(26px);
    }
    
    /* Rounded sliders */
    .slider.round {
      border-radius: 34px;
    }
    
    .slider.round:before {
      border-radius: 50%;
    }
  </style>
  <div class="wrapper">
    <%- include('nav') %>
    <div class="content-wrapper">
      <section class="content-header">
        <div class="container-fluid">
          <div class="row mb-2">
            <div class="col-sm-6">
              <h1>Browse withdrawals <img data-v-7b283485="" width="35px" height="35px" src="/images/withdraw.png" class="chackImg"></h1>
            </div>
          </div>
        </div>
        <!-- /.container-fluid -->
      </section>

      <!-- Main content -->
      <section class="content">

        <!-- Default box -->
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">withdrawals Requests</h3>

            <div class="card-tools">
              <div style="position: relative;float: left;">
                <span style="position: absolute;width: 100%;padding-top: 15%;font-size: 8px;text-align: left;/* padding-right: 8px; */margin-left: -55%;color: red;">if you turned this feature off you will go manual transfered mode</span>
              <h3 class="card-title">Transfer Mode</h3>

              <div class="three columns">	
                <label class="toggle">
                  <input type="checkbox" class="toggle-input">
                  <div class="toggle-controller default-success"></div>
                </label><!-- END .toggle -->
              </div>

            </div>
                       
              <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                <i class="fas fa-minus"></i>
              </button>
              <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                <i class="fas fa-times"></i>
              </button>
            </div>
          </div>
          <div class="card-body p-0" style="overflow-y: hidden;">
            <table class="table table-striped projects">
              <thead>
                <tr>
                  <th class="text-center">#</th>
                  <th class="text-center">Account</th>
                  <th class="text-center">Bank</th>
                  <th class="text-center">Account Number</th>
                  <th class="text-center">Account Name</th>
                  <th class="text-center">IFSC</th>
                   <th class="text-center">UPI ID</th>
                  <th class="text-center">Amount</th>
                  <th class="text-center">Date</th>
                  <th class="text-center">Status</th>
                  <th class="text-center">Accept/Reject</th>
                </tr>
              </thead>
              <tbody>
                
              </tbody>
            </table>
          </div>
        </div>

      </section>
    </div>
    
  </div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://sdk.minepi.com/pi-sdk.js"></script>
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script src="https://momentjs.com/downloads/moment.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.js"></script>
    <script src="/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/dist/js/adminlte.min.js"></script>
    <script src="/js/admin/admin.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.15.10/sweetalert2.min.js"></script>
</body>
<script>
  function formateT(params) {
  let result = (params < 10) ? "0" + params : params;
  return result;
  }
  
  function timerJoin(params = '', addHours = 0) {
      let date = '';
      if (params) {
          date = new Date(Number(params));
      } else {
          date = new Date();
      }
  
      date.setHours(date.getHours() + addHours);
  
      let years = formateT(date.getFullYear());
      let months = formateT(date.getMonth() + 1);
      let days = formateT(date.getDate());
  
      let hours = date.getHours() % 12;
      hours = hours === 0 ? 12 : hours;
      let ampm = date.getHours() < 12 ? "AM" : "PM";
  
      let minutes = formateT(date.getMinutes());
      let seconds = formateT(date.getSeconds());
  
      return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;
  }

  const Pi = window.Pi;
  Pi.init({ version: "2.0", sandbox: <%=sandbox%> });
  async function auth() {
    try {
        
        const scopes = ['username', 'payments', 'wallet_address'];
        function onIncompletePaymentFound(payment) {
            console.log("incomplete Transaction");
        }; 
  
        Pi.authenticate(scopes, onIncompletePaymentFound).then(function(auth) {
          var username = auth.user.username;
          var password = auth.user.uid;
          var auth_token = auth.accessToken;
          $('.admin_name').text(username); 
          function show(params) {
            if (params.length == 0) {
              $('tbody').html(`
                  <tr class="text-center">
                    <td colspan="7">No more data...</td>
                  </tr>
                `);
              return;
            }   
          let html = '';
          let show = params.map((data) => {
            html += `<tr class="text-center">
                      <td id="${data.id}">
                        ${data.id}
                      </td>
                      <td>
                        <b>${data.phone}</b>
                      </td>
                      <td>
                        <b>${data.name_bank}</b>
                      </td>
                      <td style="min-width: 190px;">
                        <b>${data.stk}</b>
                      </td>
                      <td style="min-width: 190px;">
                        <b>${data.name_user}</b>
                      </td>
                      <td style="min-width: 190px;">
                        <b>${data.ifsc}</b>
                      </td>
                      <td style="min-width: 190px;">
                        <b>${data.sdt}</b>
                      </td>
                      <td>
                        <b>${data.money}</b>
                      </td>
                      <td style="min-width: 190px;">
                        <b>${timerJoin(data.time)}</b>
                      </td>
                      <td class="project-state">
                        <span class="badge badge-warning">Waiting...</span>
                      </td>
                      <td class="project-actions text-center" style="min-width: 160px;">
                        <!-- xác nhận -->
                        <a class="confirm-btn btn btn-success btn-sm" data="${data.id}"><i class="fa fa-check-circle"></i></a>
                        <!-- ? -->
                        <!-- <a class="btn btn-info btn-sm" href="#"><i class="fas fa-pencil-alt"></i></a> -->
                        <!-- Xóa -->
                        <a class="delete-btn btn btn-danger btn-sm "  data="${data.id}"><i class="fas fa-times-circle"></i></a>
                      </td>
                    </tr>`;
                  })
              $('tbody').html(html);
                }
                $(document).on("click", '.confirm-btn', function(e){
                  e.preventDefault();
                  let id = $(this).attr('data');
                  $.ajax({
                    type: "POST",
                    url: "/api/webapi/admin/withdraw",
                    data: {
                      id: id,
                      type: 'confirm',
                      authtoken:auth_token,
                    },
                    dataType: "json",
                    success: function (response) {
                      Swal.fire(
                        'Good job!',
                        'Withdrawal Accepted Successfully!',
                        'success'
                      )
                      setTimeout(() => {
                        location.reload();
                      }, 100);
                    }
                  });
                 
                });
              
                $(document).on("click", '.delete-btn', function(e){
                  e.preventDefault();
                  let id = $(this).attr('data');
                  $.ajax({
                    type: "POST",
                    url: "/api/webapi/admin/withdraw",
                    data: {
                      id: id,
                      type: 'delete',
                      authtoken:auth_token,
                    },
                    dataType: "json",
                    success: function (response) {
                      setTimeout(() => {
                        location.reload();
                      }, 100);
                      Swal.fire(
                        'Good job!',
                        'Withdrawal Rejected Successfully!',
                        'success'
                      )
                    }
                  });
                });
                $.ajax({
                  type: "POST",
                  url: "/api/webapi/admin/recharge",
                  data: {
                    authtoken:auth_token,
                  },
                  dataType: "json",
                  success: function (response) {
                    show(response.datas3)
                  }
                });
                $.ajax({
                  type: "POST",
                  url: "/api/webapi/admin/gettranfermode",
                  data: {
                    authtoken:auth_token,
                  },
                  dataType: "json",
                  success: function (response) {
                    if(response.rows[0].transfer_mode.trim() == 'instant')
                    {
                      $('.toggle-input').prop("checked",true);
                      $('.toggle-off').removeClass('active');
                      $('.toggle-on').addClass('active');
                    }
                    else{
                      $('.toggle-input').prop("checked",false);
                      $('.toggle-off').addClass('active');
                      $('.toggle-on').removeClass('active');
                    }
                  }
                });

              $('.toggle-input').change(function() {
                var transfer_mode = '';
                if($(this).is(':checked')) {
                  transfer_mode = 'instant';
                    $('.toggle-off').removeClass('active');
                    $('.toggle-on').addClass('active');
                } 
                else {
                  transfer_mode = 'manual';
                $('.toggle-off').addClass('active');
                $('.toggle-on').removeClass('active');
              }
            $.ajax({
              type: "POST",
              url: "/api/webapi/admin/tranfermode",
              data: {
                mode_tran : transfer_mode,
                authtoken:auth_token,     
              },
              dataType: "json",
              success: function (response) {
                console.log(response)
              }
            });
            });
     });
    }
  catch (err) {
      alert(err);
  
  }
}
  auth();
  
</script>
</html>